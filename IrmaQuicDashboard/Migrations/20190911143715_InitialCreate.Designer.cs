// <auto-generated />
using System;
using IrmaQuicDashboard.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace IrmaQuicDashboard.Migrations
{
    [DbContext(typeof(DashboardContext))]
    [Migration("20190911143715_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079");

            modelBuilder.Entity("IrmaQuicDashboard.Models.Entities.IrmaAppLogEntry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("IrmaSessionId");

                    b.Property<DateTime>("Timestamp");

                    b.Property<int>("Type");

                    b.HasKey("Id");

                    b.HasIndex("IrmaSessionId");

                    b.ToTable("AppLogEntries");
                });

            modelBuilder.Entity("IrmaQuicDashboard.Models.Entities.IrmaServerLogEntry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("IrmaSessionId");

                    b.Property<DateTime>("Timestamp");

                    b.Property<int>("Type");

                    b.HasKey("Id");

                    b.HasIndex("IrmaSessionId");

                    b.ToTable("ServerLogEntries");
                });

            modelBuilder.Entity("IrmaQuicDashboard.Models.Entities.IrmaSession", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AppSessionId");

                    b.Property<string>("IrmaJsSessionToken");

                    b.Property<string>("SessionToken");

                    b.Property<Guid>("SessionUploadMetadataId");

                    b.Property<DateTime>("Timestamp");

                    b.HasKey("Id");

                    b.HasIndex("SessionUploadMetadataId");

                    b.ToTable("IrmaSessions");
                });

            modelBuilder.Entity("IrmaQuicDashboard.Models.Entities.SessionUploadMetadata", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Date");

                    b.Property<string>("Description");

                    b.Property<string>("Location");

                    b.Property<int>("SessionNumber");

                    b.HasKey("Id");

                    b.ToTable("SessionUploadMetadatas");
                });

            modelBuilder.Entity("IrmaQuicDashboard.Models.Entities.TimestampedLocation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("IrmaSessionId");

                    b.Property<double>("Latitude");

                    b.Property<double>("Longitude");

                    b.Property<DateTime>("Timestamp");

                    b.HasKey("Id");

                    b.HasIndex("IrmaSessionId");

                    b.ToTable("TimestampedLocations");
                });

            modelBuilder.Entity("IrmaQuicDashboard.Models.Entities.IrmaAppLogEntry", b =>
                {
                    b.HasOne("IrmaQuicDashboard.Models.Entities.IrmaSession")
                        .WithMany("AppLogEntries")
                        .HasForeignKey("IrmaSessionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("IrmaQuicDashboard.Models.Entities.IrmaServerLogEntry", b =>
                {
                    b.HasOne("IrmaQuicDashboard.Models.Entities.IrmaSession")
                        .WithMany("ServerLogEntries")
                        .HasForeignKey("IrmaSessionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("IrmaQuicDashboard.Models.Entities.IrmaSession", b =>
                {
                    b.HasOne("IrmaQuicDashboard.Models.Entities.SessionUploadMetadata")
                        .WithMany("IrmaSessions")
                        .HasForeignKey("SessionUploadMetadataId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("IrmaQuicDashboard.Models.Entities.TimestampedLocation", b =>
                {
                    b.HasOne("IrmaQuicDashboard.Models.Entities.IrmaSession")
                        .WithMany("TimestampedLocations")
                        .HasForeignKey("IrmaSessionId");
                });
#pragma warning restore 612, 618
        }
    }
}
